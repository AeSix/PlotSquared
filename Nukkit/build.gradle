import org.codehaus.groovy.runtime.IOGroovyMethods

repositories {
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/"}
    maven {url "http://nexus.hc.to/content/repositories/pub_releases"}
    flatDir {dirs 'lib'}
}

def urlFile = { urlStr, name ->
    File file = new File("$buildDir/download/${name}.jar")
    file.parentFile.mkdirs()
    if (!file.exists()) {
        try {
            String agent = "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.29 Safari/537.36";
            URL url = new URL(urlStr);
            URLConnection con = url.openConnection();
            con.setRequestProperty("User-Agent", agent);
            con.connect();
            InputStream is = con.getInputStream();
            file.withOutputStream { fileOut ->
                fileOut << is
            }
        } catch (Throwable e) {
            e.printStackTrace()
            throw e;
        }
    }
    files(file.absolutePath)
}
dependencies {
    implementation project (':Core')
    compile project(':Core')
    compile 'com.google.guava:guava:17.0'
    compile urlFile(
            'https://ci.nukkitx.com/job/NukkitX/job/Nukkit/job/master/lastSuccessfulBuild/artifact/target/nukkit-1.0-SNAPSHOT.jar',
            'nukkit-1.0-SNAPSHOT')
}

configurations.all {
    resolutionStrategy {
        force 'com.google.guava:guava:17.0'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
processResources {
    from('src/main/resources') {
        include 'plugin.yml'
        expand(
            name: project.parent.name,
            version: project.parent.version
        )
    }
}
// We only want the shadow jar produced
jar.enabled = false

shadowJar {
    dependencies {
        include(dependency(':Core'))
    }
    archiveName = "${parent.name}-${project.name}-${parent.version}.jar"
    destinationDir = file '../target'

    relocate('com.google.gson', 'com.sk89q.worldedit.internal.gson')
    relocate 'org.yaml.snakeyaml', 'com.boydti.fawe.yaml'
    relocate 'com.google.common', 'com.sk89q.worldedit.internal.common'
}

shadowJar.doLast {
    task ->
    ant.checksum file: task.archivePath
}

build.dependsOn(shadowJar);
